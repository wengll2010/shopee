// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: userredis.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 设置用户token
type SetUserTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Token      string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Expiretime int32  `protobuf:"varint,3,opt,name=expiretime,proto3" json:"expiretime,omitempty"`
}

func (x *SetUserTokenRequest) Reset() {
	*x = SetUserTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userredis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserTokenRequest) ProtoMessage() {}

func (x *SetUserTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userredis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserTokenRequest.ProtoReflect.Descriptor instead.
func (*SetUserTokenRequest) Descriptor() ([]byte, []int) {
	return file_userredis_proto_rawDescGZIP(), []int{0}
}

func (x *SetUserTokenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetUserTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SetUserTokenRequest) GetExpiretime() int32 {
	if x != nil {
		return x.Expiretime
	}
	return 0
}

type SetUserTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Errmsg  string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
}

func (x *SetUserTokenReply) Reset() {
	*x = SetUserTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userredis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUserTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUserTokenReply) ProtoMessage() {}

func (x *SetUserTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_userredis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUserTokenReply.ProtoReflect.Descriptor instead.
func (*SetUserTokenReply) Descriptor() ([]byte, []int) {
	return file_userredis_proto_rawDescGZIP(), []int{1}
}

func (x *SetUserTokenReply) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *SetUserTokenReply) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

// 查询用户token
type GetUserTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetUserTokenRequest) Reset() {
	*x = GetUserTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userredis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTokenRequest) ProtoMessage() {}

func (x *GetUserTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userredis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTokenRequest.ProtoReflect.Descriptor instead.
func (*GetUserTokenRequest) Descriptor() ([]byte, []int) {
	return file_userredis_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserTokenRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetUserTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Retcode    int32  `protobuf:"varint,1,opt,name=retcode,proto3" json:"retcode,omitempty"`
	Errmsg     string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Token      string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Expiretime int32  `protobuf:"varint,5,opt,name=expiretime,proto3" json:"expiretime,omitempty"`
}

func (x *GetUserTokenReply) Reset() {
	*x = GetUserTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userredis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTokenReply) ProtoMessage() {}

func (x *GetUserTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_userredis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTokenReply.ProtoReflect.Descriptor instead.
func (*GetUserTokenReply) Descriptor() ([]byte, []int) {
	return file_userredis_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserTokenReply) GetRetcode() int32 {
	if x != nil {
		return x.Retcode
	}
	return 0
}

func (x *GetUserTokenReply) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GetUserTokenReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserTokenReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetUserTokenReply) GetExpiretime() int32 {
	if x != nil {
		return x.Expiretime
	}
	return 0
}

var File_userredis_proto protoreflect.FileDescriptor

var file_userredis_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x64, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x53, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67,
	0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x32, 0x9b, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x63, 0x68, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x46, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userredis_proto_rawDescOnce sync.Once
	file_userredis_proto_rawDescData = file_userredis_proto_rawDesc
)

func file_userredis_proto_rawDescGZIP() []byte {
	file_userredis_proto_rawDescOnce.Do(func() {
		file_userredis_proto_rawDescData = protoimpl.X.CompressGZIP(file_userredis_proto_rawDescData)
	})
	return file_userredis_proto_rawDescData
}

var file_userredis_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_userredis_proto_goTypes = []interface{}{
	(*SetUserTokenRequest)(nil), // 0: proto.SetUserTokenRequest
	(*SetUserTokenReply)(nil),   // 1: proto.SetUserTokenReply
	(*GetUserTokenRequest)(nil), // 2: proto.GetUserTokenRequest
	(*GetUserTokenReply)(nil),   // 3: proto.GetUserTokenReply
}
var file_userredis_proto_depIdxs = []int32{
	0, // 0: proto.CacheUser.SetUserToken:input_type -> proto.SetUserTokenRequest
	2, // 1: proto.CacheUser.GetUserToken:input_type -> proto.GetUserTokenRequest
	1, // 2: proto.CacheUser.SetUserToken:output_type -> proto.SetUserTokenReply
	3, // 3: proto.CacheUser.GetUserToken:output_type -> proto.GetUserTokenReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_userredis_proto_init() }
func file_userredis_proto_init() {
	if File_userredis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_userredis_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userredis_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUserTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userredis_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userredis_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userredis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userredis_proto_goTypes,
		DependencyIndexes: file_userredis_proto_depIdxs,
		MessageInfos:      file_userredis_proto_msgTypes,
	}.Build()
	File_userredis_proto = out.File
	file_userredis_proto_rawDesc = nil
	file_userredis_proto_goTypes = nil
	file_userredis_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CacheUserClient is the client API for CacheUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CacheUserClient interface {
	SetUserToken(ctx context.Context, in *SetUserTokenRequest, opts ...grpc.CallOption) (*SetUserTokenReply, error)
	GetUserToken(ctx context.Context, in *GetUserTokenRequest, opts ...grpc.CallOption) (*GetUserTokenReply, error)
}

type cacheUserClient struct {
	cc grpc.ClientConnInterface
}

func NewCacheUserClient(cc grpc.ClientConnInterface) CacheUserClient {
	return &cacheUserClient{cc}
}

func (c *cacheUserClient) SetUserToken(ctx context.Context, in *SetUserTokenRequest, opts ...grpc.CallOption) (*SetUserTokenReply, error) {
	out := new(SetUserTokenReply)
	err := c.cc.Invoke(ctx, "/proto.CacheUser/SetUserToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheUserClient) GetUserToken(ctx context.Context, in *GetUserTokenRequest, opts ...grpc.CallOption) (*GetUserTokenReply, error) {
	out := new(GetUserTokenReply)
	err := c.cc.Invoke(ctx, "/proto.CacheUser/GetUserToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CacheUserServer is the server API for CacheUser service.
type CacheUserServer interface {
	SetUserToken(context.Context, *SetUserTokenRequest) (*SetUserTokenReply, error)
	GetUserToken(context.Context, *GetUserTokenRequest) (*GetUserTokenReply, error)
}

// UnimplementedCacheUserServer can be embedded to have forward compatible implementations.
type UnimplementedCacheUserServer struct {
}

func (*UnimplementedCacheUserServer) SetUserToken(context.Context, *SetUserTokenRequest) (*SetUserTokenReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUserToken not implemented")
}
func (*UnimplementedCacheUserServer) GetUserToken(context.Context, *GetUserTokenRequest) (*GetUserTokenReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserToken not implemented")
}

func RegisterCacheUserServer(s *grpc.Server, srv CacheUserServer) {
	s.RegisterService(&_CacheUser_serviceDesc, srv)
}

func _CacheUser_SetUserToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheUserServer).SetUserToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CacheUser/SetUserToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheUserServer).SetUserToken(ctx, req.(*SetUserTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CacheUser_GetUserToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheUserServer).GetUserToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CacheUser/GetUserToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheUserServer).GetUserToken(ctx, req.(*GetUserTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CacheUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CacheUser",
	HandlerType: (*CacheUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetUserToken",
			Handler:    _CacheUser_SetUserToken_Handler,
		},
		{
			MethodName: "GetUserToken",
			Handler:    _CacheUser_GetUserToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "userredis.proto",
}
